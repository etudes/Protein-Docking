%!PS-Adobe-3.0 EPSF-3.0
%%Creator: MATLAB, The MathWorks, Inc. Version 7.14.0.739 (R2012a). Operating System: Microsoft Windows 7.
%%Title: C:\Users\Vikram\Documents\MATLAB\2snidecoys4.eps
%%CreationDate: 03/07/2013  17:51:29
%%DocumentNeededFonts: Helvetica
%%+ Times-Bold
%%DocumentProcessColors: Cyan Magenta Yellow Black
%%LanguageLevel: 2
%%Pages: 1
%%BoundingBox:  -289   112   902   680
%%EndComments

%%BeginProlog
% MathWorks dictionary
/MathWorks 160 dict begin
% definition operators
/bdef {bind def} bind def
/ldef {load def} bind def
/xdef {exch def} bdef
/xstore {exch store} bdef
% operator abbreviations
/c  /clip ldef
/cc /concat ldef
/cp /closepath ldef
/gr /grestore ldef
/gs /gsave ldef
/mt /moveto ldef
/np /newpath ldef
/cm /currentmatrix ldef
/sm /setmatrix ldef
/rm /rmoveto ldef
/rl /rlineto ldef
/s {show newpath} bdef
/sc {setcmykcolor} bdef
/sr /setrgbcolor ldef
/sg /setgray ldef
/w /setlinewidth ldef
/j /setlinejoin ldef
/cap /setlinecap ldef
/rc {rectclip} bdef
/rf {rectfill} bdef
% page state control
/pgsv () def
/bpage {/pgsv save def} bdef
/epage {pgsv restore} bdef
/bplot /gsave ldef
/eplot {stroke grestore} bdef
% orientation switch
/portraitMode 0 def /landscapeMode 1 def /rotateMode 2 def
% coordinate system mappings
/dpi2point 0 def
% font control
/FontSize 0 def
/FMS {/FontSize xstore findfont [FontSize 0 0 FontSize neg 0 0]
  makefont setfont} bdef
/ISOLatin1Encoding where {pop /WindowsLatin1Encoding 256 array bdef
ISOLatin1Encoding WindowsLatin1Encoding copy pop
/.notdef/.notdef/quotesinglbase/florin/quotedblbase/ellipsis/dagger
/daggerdbl/circumflex/perthousand/Scaron/guilsinglleft/OE/.notdef/.notdef
/.notdef/.notdef/quoteleft/quoteright/quotedblleft/quotedblright/bullet
/endash/emdash/tilde/trademark/scaron/guilsinglright/oe/.notdef/.notdef
/Ydieresis WindowsLatin1Encoding 128 32 getinterval astore pop}
{/WindowsLatin1Encoding StandardEncoding bdef} ifelse
/reencode {exch dup where {pop load} {pop StandardEncoding} ifelse
  exch dup 3 1 roll findfont dup length dict begin
  { 1 index /FID ne {def}{pop pop} ifelse } forall
  /Encoding exch def currentdict end definefont pop} bdef
/isroman {findfont /CharStrings get /Agrave known} bdef
/FMSR {3 1 roll 1 index dup isroman {reencode} {pop pop} ifelse
  exch FMS} bdef
/csm {1 dpi2point div -1 dpi2point div scale neg translate
 dup landscapeMode eq {pop -90 rotate}
  {rotateMode eq {90 rotate} if} ifelse} bdef
% line types: solid, dotted, dashed, dotdash
/SO { [] 0 setdash } bdef
/DO { [.5 dpi2point mul 4 dpi2point mul] 0 setdash } bdef
/DA { [6 dpi2point mul] 0 setdash } bdef
/DD { [.5 dpi2point mul 4 dpi2point mul 6 dpi2point mul 4
  dpi2point mul] 0 setdash } bdef
% macros for lines and objects
/L {lineto stroke} bdef
/MP {3 1 roll moveto 1 sub {rlineto} repeat} bdef
/AP {{rlineto} repeat} bdef
/PDlw -1 def
/W {/PDlw currentlinewidth def setlinewidth} def
/PP {closepath eofill} bdef
/DP {closepath stroke} bdef
/MR {4 -2 roll moveto dup  0 exch rlineto exch 0 rlineto
  neg 0 exch rlineto closepath} bdef
/FR {MR stroke} bdef
/PR {MR fill} bdef
/L1i {{currentfile picstr readhexstring pop} image} bdef
/tMatrix matrix def
/MakeOval {newpath tMatrix currentmatrix pop translate scale
0 0 1 0 360 arc tMatrix setmatrix} bdef
/FO {MakeOval stroke} bdef
/PO {MakeOval fill} bdef
/PD {currentlinewidth 2 div 0 360 arc fill
   PDlw -1 eq not {PDlw w /PDlw -1 def} if} def
/FA {newpath tMatrix currentmatrix pop translate scale
  0 0 1 5 -2 roll arc tMatrix setmatrix stroke} bdef
/PA {newpath tMatrix currentmatrix pop	translate 0 0 moveto scale
  0 0 1 5 -2 roll arc closepath tMatrix setmatrix fill} bdef
/FAn {newpath tMatrix currentmatrix pop translate scale
  0 0 1 5 -2 roll arcn tMatrix setmatrix stroke} bdef
/PAn {newpath tMatrix currentmatrix pop translate 0 0 moveto scale
  0 0 1 5 -2 roll arcn closepath tMatrix setmatrix fill} bdef
/vradius 0 def /hradius 0 def /lry 0 def
/lrx 0 def /uly 0 def /ulx 0 def /rad 0 def
/MRR {/vradius xdef /hradius xdef /lry xdef /lrx xdef /uly xdef
  /ulx xdef newpath tMatrix currentmatrix pop ulx hradius add uly
  vradius add translate hradius vradius scale 0 0 1 180 270 arc 
  tMatrix setmatrix lrx hradius sub uly vradius add translate
  hradius vradius scale 0 0 1 270 360 arc tMatrix setmatrix
  lrx hradius sub lry vradius sub translate hradius vradius scale
  0 0 1 0 90 arc tMatrix setmatrix ulx hradius add lry vradius sub
  translate hradius vradius scale 0 0 1 90 180 arc tMatrix setmatrix
  closepath} bdef
/FRR {MRR stroke } bdef
/PRR {MRR fill } bdef
/MlrRR {/lry xdef /lrx xdef /uly xdef /ulx xdef /rad lry uly sub 2 div def
  newpath tMatrix currentmatrix pop ulx rad add uly rad add translate
  rad rad scale 0 0 1 90 270 arc tMatrix setmatrix lrx rad sub lry rad
  sub translate rad rad scale 0 0 1 270 90 arc tMatrix setmatrix
  closepath} bdef
/FlrRR {MlrRR stroke } bdef
/PlrRR {MlrRR fill } bdef
/MtbRR {/lry xdef /lrx xdef /uly xdef /ulx xdef /rad lrx ulx sub 2 div def
  newpath tMatrix currentmatrix pop ulx rad add uly rad add translate
  rad rad scale 0 0 1 180 360 arc tMatrix setmatrix lrx rad sub lry rad
  sub translate rad rad scale 0 0 1 0 180 arc tMatrix setmatrix
  closepath} bdef
/FtbRR {MtbRR stroke } bdef
/PtbRR {MtbRR fill } bdef
/stri 6 array def /dtri 6 array def
/smat 6 array def /dmat 6 array def
/tmat1 6 array def /tmat2 6 array def /dif 3 array def
/asub {/ind2 exch def /ind1 exch def dup dup
  ind1 get exch ind2 get sub exch } bdef
/tri_to_matrix {
  2 0 asub 3 1 asub 4 0 asub 5 1 asub
  dup 0 get exch 1 get 7 -1 roll astore } bdef
/compute_transform {
  dmat dtri tri_to_matrix tmat1 invertmatrix 
  smat stri tri_to_matrix tmat2 concatmatrix } bdef
/ds {stri astore pop} bdef
/dt {dtri astore pop} bdef
/db {2 copy /cols xdef /rows xdef mul dup 3 mul string
  currentfile 
  3 index 0 eq {/ASCIIHexDecode filter}
  {/ASCII85Decode filter 3 index 2 eq {/RunLengthDecode filter} if }
  ifelse exch readstring pop
  dup 0 3 index getinterval /rbmap xdef
  dup 2 index dup getinterval /gbmap xdef
  1 index dup 2 mul exch getinterval /bbmap xdef pop pop}bdef
/it {gs np dtri aload pop moveto lineto lineto cp c
  cols rows 8 compute_transform 
  rbmap gbmap bbmap true 3 colorimage gr}bdef
/il {newpath moveto lineto stroke}bdef
currentdict end def
%%EndProlog

%%BeginSetup
MathWorks begin

0 cap

end
%%EndSetup

%%Page: 1 1
%%BeginPageSetup
%%PageBoundingBox:  -289   112   902   680
MathWorks begin
bpage
%%EndPageSetup

%%BeginObject: obj1
bplot

/dpi2point 12 def
portraitMode -3468 8160 csm

    0     0 14300  6815 rc
85 dict begin %Colortable dictionary
/c0 { 0.000000 0.000000 0.000000 sr} bdef
/c1 { 1.000000 1.000000 1.000000 sr} bdef
/c2 { 0.900000 0.000000 0.000000 sr} bdef
/c3 { 0.000000 0.820000 0.000000 sr} bdef
/c4 { 0.000000 0.000000 0.800000 sr} bdef
/c5 { 0.910000 0.820000 0.320000 sr} bdef
/c6 { 1.000000 0.260000 0.820000 sr} bdef
/c7 { 0.000000 0.820000 0.820000 sr} bdef
c0
1 j
1 sg
   0    0 14301 6816 rf
60 w
0 4294 10960 0 0 -4294 1982 5536 4 MP
PP
-10960 0 0 4294 10960 0 0 -4294 1982 5536 5 MP stroke
40 w
DO
SO
60 w
0 sg
1982 5536 mt 12942 5536 L
1982 5536 mt 1982 1242 L
1982 5536 mt 1982 5426 L
%%IncludeResource: font Times-Bold
/Times-Bold /WindowsLatin1Encoding 432 FMSR

1874 5973 mt 
(0) s
5635 5536 mt 5635 5426 L
5527 5973 mt 
(5) s
9288 5536 mt 9288 5426 L
9072 5973 mt 
(10) s
12942 5536 mt 12942 5426 L
12726 5973 mt 
(15) s
1982 5536 mt 2091 5536 L
1053 5697 mt 
(-200) s
1982 4462 mt 2091 4462 L
1053 4623 mt 
(-100) s
1982 3389 mt 2091 3389 L
1731 3550 mt 
(0) s
1982 2315 mt 2091 2315 L
1299 2476 mt 
(100) s
1982 1242 mt 2091 1242 L
1299 1403 mt 
(200) s
gs 1982 1242 10961 4295 rc
0 j
6 w
gr

6 w
  60   60 12927 2904 PO
  60   60 10209 4270 PO
  60   60 11078 4219 PO
  60   60 11729 3923 PO
  60   60 9025 1831 PO
  60   60 12540 3933 PO
  60   60 9551 1330 PO
  60   60 4181 3141 PO
  60   60 12101 2936 PO
  60   60 11531 4941 PO
  60   60 11838 1694 PO
  60   60 9610 4844 PO
  60   60 9902 4672 PO
  60   60 7016 4118 PO
  60   60 5255 4306 PO
  60   60 10969 2261 PO
  60   60 7746 4793 PO
  60   60 2990 4678 PO
  60   60 11246 4090 PO
  60   60 8178 4544 PO
  60   60 7469 2843 PO
  60   60 5971 4743 PO
  60   60 6943 4826 PO
  60   60 7213 5240 PO
  60   60 11166 4878 PO
  60   60 5087 5039 PO
  60   60 8002 4094 PO
  60   60 9200 4566 PO
  60   60 12942 4468 PO
  60   60 12920 4023 PO
  60   60 9909 3462 PO
  60   60 11561 3420 PO
  60   60 9084 5105 PO
  60   60 12598 4391 PO
  60   60 8163 5199 PO
  60   60 9325 5505 PO
  60   60 12035 5111 PO
  60   60 8769 3142 PO
  60   60 7352 4265 PO
  60   60 4787 4236 PO
  60   60 2603 4577 PO
  60   60 11312 3271 PO
  60   60 8302 4596 PO
  60   60 12730 1918 PO
  60   60 5189 4269 PO
  60   60 10603 2264 PO
  60   60 11648 3292 PO
  60   60 9741 4578 PO
  60   60 10523 3051 PO
  60   60 12087 5269 PO
  60   60 3465 2712 PO
  60   60 6972 2565 PO
  60   60 11400 5016 PO
  60   60 5679 4468 PO
  60   60 7944 2865 PO
  60   60 7162 3944 PO
  60   60 11707 4532 PO
  60   60 10662 4787 PO
  60   60 8755 1697 PO
  60   60 11261 4033 PO
  60   60 4605 3870 PO
  60   60 12854 4820 PO
  60   60 11159 2961 PO
  60   60 10289 3815 PO
  60   60 9588 2678 PO
  60   60 3889 4354 PO
  60   60 7695 1728 PO
  60   60 2690 1999 PO
  60   60 8470 4401 PO
  60   60 12072 4503 PO
  60   60 8017 4928 PO
  60   60 9690 3978 PO
  60   60 12598 3592 PO
  60   60 8061 3748 PO
  60   60 4020 4770 PO
  60   60 4634 3401 PO
  60   60 12240 3027 PO
  60   60 8667 4120 PO
  60   60 11005 1345 PO
  60   60 10465 3922 PO
  60   60 4422 4768 PO
  60   60 6490 4236 PO
  60   60 9895 4340 PO
  60   60 10318 5011 PO
  60   60 6227 5212 PO
  60   60 9880 4849 PO
  60   60 11590 4694 PO
  60   60 8726 2769 PO
  60   60 9683 4824 PO
  60   60 7535 4423 PO
  60   60 7082 5177 PO
  60   60 11656 4237 PO
  60   60 2807 4149 PO
  60   60 7235 4141 PO
  60   60 10669 4429 PO
  60   60 3962 4000 PO
  60   60 10713 1335 PO
  60   60 11480 3708 PO
  60   60 6278 4081 PO
  60   60 8324 4450 PO
  60   60 9244 3432 PO
  60   60 5686 4489 PO
  60   60 7681 4849 PO
  60   60 6775 1898 PO
  60   60 10888 3569 PO
  60   60 5116 4769 PO
  60   60 9062 4044 PO
  60   60 11955 4756 PO
  60   60 6475 4008 PO
  60   60 9500 4044 PO
  60   60 5635 5155 PO
  60   60 7286 2784 PO
  60   60 12752 4109 PO
  60   60 9127 4220 PO
  60   60 3428 4300 PO
  60   60 3282 4621 PO
  60   60 4137 2034 PO
  60   60 5503 2345 PO
  60   60 5386 4057 PO
  60   60 5591 4163 PO
  60   60 2215 4325 PO
  60   60 6607 4556 PO
  60   60 12269 3418 PO
  60   60 11100 4849 PO
  60   60 3516 3815 PO
  60   60 7469 4031 PO
  60   60 4502 3277 PO
  60   60 11056 4737 PO
  60   60 9829 4632 PO
  60   60 7074 4587 PO
  60   60 5021 4389 PO
  60   60 8017 4997 PO
  60   60 7410 4800 PO
  60   60 9807 2923 PO
  60   60 11787 4645 PO
  60   60 11210 3832 PO
  60   60 3114 4290 PO
  60   60 9259 4475 PO
  60   60 11108 1712 PO
  60   60 7936 3519 PO
  60   60 10399 4746 PO
  60   60 9500 3998 PO
  60   60 11049 3521 PO
  60   60 12189 3836 PO
  60   60 8828 1728 PO
  60   60 10545 4844 PO
  60   60 12854 1835 PO
  60   60 12912 4926 PO
  60   60 9938 4626 PO
  60   60 6731 2457 PO
  60   60 6731 4495 PO
  60   60 9449 4758 PO
  60   60 12035 3299 PO
  60   60 9785 2293 PO
  60   60 12320 5366 PO
  60   60 5270 2660 PO
  60   60 4181 4595 PO
  60   60 4049 2686 PO
  60   60 7556 4388 PO
  60   60 12152 2735 PO
  60   60 9069 4433 PO
  60   60 2376 3797 PO
  60   60 12196 4485 PO
  60   60 11093 2332 PO
  60   60 10304 4098 PO
  60   60 9522 4929 PO
  60   60 9997 1576 PO
  60   60 10033 2560 PO
  60   60 11093 3926 PO
  60   60 11122 4682 PO
  60   60 5138 4526 PO
  60   60 11108 3822 PO
  60   60 12649 1651 PO
  60   60 9734 4755 PO
  60   60 8572 4750 PO
  60   60 10801 5236 PO
  60   60 2551 1790 PO
  60   60 9522 5427 PO
  60   60 12415 4532 PO
  60   60 3289 2106 PO
  60   60 4232 2446 PO
  60   60 7798 3857 PO
  60   60 8411 3774 PO
  60   60 8199 3438 PO
  60   60 4882 4522 PO
  60   60 12912 5094 PO
  60   60 11948 4082 PO
  60   60 10844 3132 PO
  60   60 8112 4588 PO
  60   60 2719 3332 PO
  60   60 3589 4656 PO
  60   60 4100 4929 PO
  60   60 5065 3611 PO
  60   60 11999 3530 PO
  60   60 9054 4377 PO
  60   60 2376 4518 PO
  60   60 6022 4403 PO
  60   60 8090 4002 PO
  60   60 5394 3324 PO
  60   60 10384 4572 PO
  60   60 10998 3323 PO
  60   60 12262 3831 PO
  60   60 3048 2635 PO
  60   60 10391 4583 PO
  60   60 3004 4744 PO
  60   60 8243 5021 PO
  60   60 9237 5189 PO
  60   60 10019 3624 PO
  60   60 12087 4980 PO
  60   60 10881 4726 PO
  60   60 6665 3886 PO
  60   60 8609 3894 PO
  60   60 6015 4438 PO
  60   60 12730 5053 PO
  60   60 9376 3629 PO
  60   60 8733 4967 PO
  60   60 8791 4037 PO
  60   60 7776 4114 PO
  60   60 10888 3877 PO
  60   60 4722 1497 PO
  60   60 3998 3161 PO
  60   60 6037 4436 PO
  60   60 9741 4671 PO
  60   60 10311 4593 PO
  60   60 12525 4863 PO
  60   60 9602 4160 PO
  60   60 5920 4295 PO
  60   60 9493 4637 PO
  60   60 7388 3596 PO
  60   60 7432 3728 PO
  60   60 7498 5209 PO
  60   60 7527 5111 PO
  60   60 9215 4028 PO
  60   60 11042 4247 PO
  60   60 10903 4108 PO
  60   60 9690 4415 PO
  60   60 6066 4323 PO
  60   60 10823 4328 PO
  60   60 8251 4431 PO
  60   60 6928 4958 PO
  60   60 7754 4467 PO
  60   60 6490 5232 PO
  60   60 8623 2941 PO
  60   60 10099 4551 PO
  60   60 11597 5079 PO
  60   60 4342 1771 PO
  60   60 12262 4549 PO
  60   60 8360 2674 PO
  60   60 6307 2564 PO
  60   60 7111 5490 PO
  60   60 9727 4380 PO
  60   60 5912 4329 PO
  60   60 9917 4795 PO
  60   60 11685 2403 PO
  60   60 5628 5125 PO
  60   60 12306 4127 PO
  60   60 9369 3653 PO
  60   60 8835 4564 PO
  60   60 10976 4316 PO
  60   60 3034 3021 PO
  60   60 10311 3102 PO
  60   60 10486 4839 PO
  60   60 5350 4979 PO
  60   60 3538 2084 PO
  60   60 3991 2862 PO
  60   60 6804 4487 PO
  60   60 9734 4351 PO
  60   60 8536 1468 PO
  60   60 10903 4483 PO
  60   60 11641 2594 PO
  60   60 2559 2107 PO
  60   60 6643 4350 PO
  60   60 6000 4919 PO
  60   60 11203 4561 PO
  60   60 12291 4450 PO
  60   60 6468 4471 PO
  60   60 11568 1517 PO
  60   60 9215 4405 PO
  60   60 12657 4290 PO
  60   60 7001 2653 PO
  60   60 4312 3898 PO
  60   60 11692 4722 PO
  60   60 6066 2370 PO
  60   60 11604 4311 PO
  60   60 9288 4653 PO
  60   60 10939 4605 PO
  60   60 9281 5057 PO
  60   60 6124 4363 PO
  60   60 12730 4581 PO
  60   60 7016 5002 PO
  60   60 7863 1517 PO
  60   60 9873 3435 PO
  60   60 10150 4330 PO
  60   60 2427 4561 PO
  60   60 10530 3645 PO
  60   60 6928 4996 PO
  60   60 6022 3481 PO
  60   60 7454 2724 PO
  60   60 12927 1567 PO
  60   60 9252 1290 PO
  60   60 8784 4658 PO
  60   60 5912 4020 PO
  60   60 7966 4034 PO
  60   60 8506 4751 PO
  60   60 8937 4896 PO
  60   60 12525 4956 PO
  60   60 3114 2589 PO
  60   60 7637 4422 PO
  60   60 7410 4802 PO
  60   60 12569 2785 PO
  60   60 10625 4190 PO
  60   60 7352 1916 PO
  60   60 3940 2793 PO
  60   60 10048 3163 PO
  60   60 10954 2959 PO
  60   60 12350 4344 PO
  60   60 6124 4050 PO
  60   60 11217 4826 PO
  60   60 7367 4830 PO
  60   60 12357 3695 PO
  60   60 8631 1775 PO
  60   60 11129 4952 PO
  60   60 9968 4377 PO
  60   60 12306 3471 PO
  60   60 5350 2706 PO
  60   60 6541 5391 PO
  60   60 11210 3730 PO
  60   60 9800 5517 PO
  60   60 9683 4232 PO
  60   60 12693 4996 PO
  60   60 8726 3053 PO
  60   60 12532 1491 PO
  60   60 11838 4285 PO
  60   60 12401 2475 PO
  60   60 12291 3142 PO
  60   60 9829 2603 PO
  60   60 9712 4569 PO
  60   60 7060 4390 PO
  60   60 11699 3912 PO
  60   60 8967 4141 PO
  60   60 11246 3994 PO
  60   60 9449 4555 PO
  60   60 8879 2319 PO
  60   60 8623 1452 PO
  60   60 10750 4616 PO
  60   60 8937 4508 PO
  60   60 9339 2779 PO
  60   60 6132 4673 PO
  60   60 5744 5056 PO
  60   60 12174 4690 PO
  60   60 8733 4841 PO
  60   60 8791 4521 PO
  60   60 6154 5010 PO
  60   60 5072 5367 PO
  60   60 11721 3548 PO
  60   60 11641 4755 PO
  60   60 7060 5244 PO
  60   60 12649 3983 PO
  60   60 8397 4097 PO
  60   60 8821 2603 PO
  60   60 10092 4548 PO
  60   60 10209 4519 PO
  60   60 10837 4691 PO
  60   60 9822 4664 PO
  60   60 12481 4376 PO
  60   60 8645 4658 PO
  60   60 2939 4758 PO
  60   60 9011 3474 PO
  60   60 12313 4739 PO
  60   60 10077 1860 PO
  60   60 8463 3861 PO
  60   60 9748 4048 PO
  60   60 9624 3298 PO
  60   60 11648 4747 PO
  60   60 8324 4330 PO
  60   60 12503 4625 PO
  60   60 9237 3042 PO
  60   60 2756 2710 PO
  60   60 2931 4121 PO
  60   60 7725 5495 PO
  60   60 12773 3560 PO
  60   60 3706 1660 PO
  60   60 2771 3605 PO
  60   60 7637 4837 PO
  60   60 8594 5538 PO
  60   60 8828 3109 PO
  60   60 9705 5269 PO
  60   60 8696 4876 PO
  60   60 7754 3493 PO
  60   60 10910 3029 PO
  60   60 12817 4484 PO
  60   60 12401 4328 PO
  60   60 3297 3541 PO
  60   60 9990 4625 PO
  60   60 8638 5130 PO
  60   60 8521 5514 PO
  60   60 9222 3988 PO
  60   60 12269 3782 PO
  60   60 8053 4153 PO
  60   60 10370 4610 PO
  60   60 11254 3863 PO
  60   60 10939 4735 PO
  60   60 8148 2657 PO
  60   60 9544 4680 PO
  60   60 2573 4727 PO
  60   60 6102 1926 PO
  60   60 12934 3011 PO
  60   60 3297 1883 PO
  60   60 12057 4091 PO
  60   60 3494 2914 PO
  60   60 11919 3786 PO
  60   60 6081 2247 PO
  60   60 4195 4889 PO
  60   60 8791 3504 PO
  60   60 9317 4929 PO
  60   60 12430 4668 PO
  60   60 9982 3073 PO
  60   60 5270 4033 PO
  60   60 12247 4460 PO
  60   60 12715 4322 PO
  60   60 6373 2210 PO
  60   60 7118 3927 PO
  60   60 9427 1702 PO
0 j
/c8 { 1.000000 0.000000 0.000000 sr} bdef
c8
  60   60 11531 4313 PO
  60   60 9610 4093 PO
  60   60 7746 4920 PO
  60   60 6943 4803 PO
  60   60 7213 4797 PO
  60   60 11166 5409 PO
  60   60 5087 4695 PO
  60   60 9084 4734 PO
  60   60 8163 4376 PO
  60   60 7367 5005 PO
  60   60 11400 4701 PO
  60   60 10662 4341 PO
  60   60 12854 3566 PO
  60   60 8017 1296 PO
  60   60 4020 3903 PO
  60   60 8996 4835 PO
  60   60 4422 2090 PO
  60   60 10318 4550 PO
  60   60 6227 4126 PO
  60   60 9880 4573 PO
  60   60 9683 4727 PO
  60   60 7082 4222 PO
  60   60 7681 5159 PO
  60   60 5635 4402 PO
  60   60 11100 4380 PO
  60   60 8017 4441 PO
  60   60 7410 3663 PO
  60   60 10545 4833 PO
  60   60 12912 5290 PO
  60   60 12320 4182 PO
  60   60 9522 4755 PO
  60   60 8755 1634 PO
  60   60 10801 4136 PO
  60   60 9522 5097 PO
  60   60 12912 4779 PO
  60   60 4100 4179 PO
  60   60 8243 4127 PO
  60   60 9237 4973 PO
  60   60 12087 3490 PO
  60   60 12730 4172 PO
  60   60 8733 2894 PO
  60   60 7337 3347 PO
  60   60 9295 4810 PO
  60   60 12525 4798 PO
  60   60 7527 4669 PO
  60   60 6928 4581 PO
  60   60 6490 4351 PO
  60   60 11597 4977 PO
  60   60 7111 4040 PO
  60   60 5861 4600 PO
  60   60 9917 4281 PO
  60   60 5628 4387 PO
  60   60 10486 4603 PO
  60   60 5350 4627 PO
  60   60 7593 4832 PO
  60   60 6000 4543 PO
  60   60 9281 4317 PO
  60   60 7016 4482 PO
  60   60 6928 4107 PO
  60   60 8937 4093 PO
  60   60 12525 4528 PO
  60   60 7410 4984 PO
  60   60 11217 4255 PO
  60   60 7367 4815 PO
  60   60 11129 3863 PO
  60   60 6541 3984 PO
  60   60 9800 4186 PO
  60   60 12693 4750 PO
  60   60 7827 4976 PO
  60   60 5744 4811 PO
  60   60 8733 4727 PO
  60   60 6154 4596 PO
  60   60 5072 4245 PO
  60   60 7060 4362 PO
  60   60 7725 4661 PO
  60   60 7637 4354 PO
  60   60 8594 4313 PO
  60   60 9705 4761 PO
  60   60 8696 4371 PO
  60   60 8638 4236 PO
  60   60 8521 5031 PO
  60   60 4195 3960 PO
  60   60 9317 4312 PO
/c9 { 0.000000 0.000000 1.000000 sr} bdef
c9
  60   60 1982 4759 PO
0 sg
%%IncludeResource: font Times-Bold
/Times-Bold /WindowsLatin1Encoding 864 FMSR

5505 6625 mt 
(LRMS \(A\)) s
 810 4414 mt  -90 rotate
(Score) s
90 rotate
3621  807 mt 
(Complex 2sni decoys) s
60 w
6 w

end %%Color Dict

eplot
%%EndObject

epage
end

showpage

%%Trailer
%%EOF
